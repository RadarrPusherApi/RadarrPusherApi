name: Build & Test

trigger:
- dev
- main

pool:
  vmImage: 'windows-2022'

variables:
  - name: solution
    value: '**/*.sln'
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
  - group: Cloudinary
  - group: Pusher
  - group: Radarr
  - group: WebApi

steps:
- task: CmdLine@2
  inputs:
    script: |
      echo '$(SubscriptionId)'
      echo $(AppName)

- task: NuGetToolInstaller@1
  displayName: "Install NuGet"

- task: NuGetCommand@2
  displayName: "Restore packages"
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: "Build solution"
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: FileTransform@1
  displayName: "Transform json for Cloudinary.Api.IntegrationTests"
  inputs:
    folderPath: 'RadarrPusherApi.Cloudinary.Api.IntegrationTests\bin\$(BuildConfiguration)\net6.0\'
    fileType: 'json'
    targetFiles: 'appsettings.json'

- task: FileTransform@1
  displayName: "Transform json for Pusher.Api.IntegrationTests"
  inputs:
    folderPath: 'RadarrPusherApi.Pusher.Api.IntegrationTests\bin\$(BuildConfiguration)\net6.0\'
    fileType: 'json'
    targetFiles: 'appsettings.json'

- task: VSTest@2
  displayName: "Run xUnit tests"
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\bin\$(BuildConfiguration)\**\*Tests.dll
      !**\obj\**
      !**\ref\**
      !**\xunit.runner.visualstudio.testadapter.dll
      !**\xunit.runner.visualstudio.dotnetcore.testadapter.dll
    searchFolder: '$(System.DefaultWorkingDirectory)'

- task: DotNetCoreCLI@2
  displayName: 'Publish and zip'
  inputs:
    command: publish
    publishWebProjects: false
    projects: RadarrPusherApi.WebApi\RadarrPusherApi.WebApi.csproj
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  displayName: 'Deploy Azure Web App'
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Pay-As-You-Go(6d382b22-a8fe-40f8-aa1b-1db672af4c64)'
    appType: 'webApp'
    WebAppName: 'RadarrPusherApi'
    deployToSlotOrASE: true
    ResourceGroupName: 'RadarrPusherApiGroup'
    SlotName: 'production'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    enableCustomDeployment: true
    DeploymentType: 'zipDeploy'
    JSONFiles: 'appsettings.json'